import React from "react";
declare const _default: {
    title: string;
    component: React.ForwardRefExoticComponent<Pick<import("../TextField").TextfieldI, "name" | "value" | "id" | "disabled" | "required" | "type" | "onChange" | "thickness" | "loading" | "tabIndex" | "error" | "innerPreIcon" | "innerSufIcon" | "autocomplete" | "clearButton" | "strength" | "show" | "helpIcon" | "controlStates" | "hotjarEncryption" | "placeHolder" | "showHelp" | "suffix" | "prefix" | "onEnter" | "onblur" | "onKeyUp" | "onFocus" | "onBackspace" | "readOnly" | "min" | "max" | "clearFunction" | "maxlength" | "autoFocus"> & React.RefAttributes<unknown>>;
    argTypes: {
        value: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        placeHolder: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        name: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        type: {
            control: {
                type: string;
                options: string[];
            };
            defaultValue: string;
        };
        showHelp: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        prefix: {
            description: string;
            control: {
                type: string;
            };
            defaultValue: string;
        };
        suffix: {
            description: string;
            control: {
                type: string;
            };
            defaultValue: string;
        };
        id: {
            description: string;
            control: {
                type: string;
            };
            defaultValue: string;
        };
        thickness: {
            control: {
                type: string;
                options: string[];
            };
            defaultValue: string;
        };
        controlStates: {
            control: {
                type: string;
                options: string[];
            };
        };
        innerPreIcon: {
            description: string;
            control: {
                type: string;
            };
            defaultValue: string;
        };
        innerSufIcon: {
            description: string;
            control: {
                type: string;
            };
            defaultValue: string;
        };
        clearButton: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        onFocus: {
            control: {
                type: string;
            };
        };
        onEnter: {
            control: {
                disable: boolean;
            };
        };
        onChange: {
            control: {
                disable: boolean;
            };
        };
        maxlength: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        min: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        max: {
            control: {
                type: string;
            };
            defaultValue: string;
        };
        helpIcon: {
            control: {
                description: string;
                type: string;
            };
            defaultValue: string;
        };
        error: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        required: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        readOnly: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        autocomplete: {
            control: {
                type: string;
                options: string[];
            };
            defaultValue: string;
        };
        loading: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        disabled: {
            control: {
                type: string;
                description: string;
            };
            defaultValue: boolean;
        };
        strength: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        autoFocus: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        hotjarEncryption: {
            control: {
                type: string;
            };
            defaultValue: boolean;
        };
        tabIndex: {
            control: {
                type: string;
            };
            defaultValue: number;
        };
        show: {
            table: {
                disable: boolean;
            };
        };
    };
};
export default _default;
export declare const Primary: ({ ...rest }: {
    [x: string]: any;
}) => JSX.Element;
export declare const Default: any;
export declare const Types: any;
export declare const strengthPassword: any;
export declare const Name: any;
export declare const PlaceHolder: any;
export declare const ShowHelp: any;
export declare const ShowHelpIcon: any;
export declare const InnerPreIcon: any;
export declare const InnerSufIcon: any;
export declare const Prefix: any;
export declare const Suffix: any;
export declare const Loading_Textfield: any;
export declare const ClearButton: any;
export declare const Thickness: any;
export declare const Error: any;
export declare const Control_States: any;
